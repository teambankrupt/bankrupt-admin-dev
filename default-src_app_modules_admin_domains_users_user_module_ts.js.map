{"version":3,"file":"default-src_app_modules_admin_domains_users_user_module_ts.js","mappings":"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","sources":["./src/app/modules/admin/domains/users/pages/activity-log/activity-log.component.ts","./src/app/modules/admin/domains/users/pages/activity-log/activity-log.component.html","./src/app/modules/admin/domains/users/pages/request-credentials/request-credentials.component.ts","./src/app/modules/admin/domains/users/pages/request-credentials/request-credentials.component.html","./src/app/modules/admin/domains/users/pages/users/users.component.ts","./src/app/modules/admin/domains/users/pages/users/users.component.html","./src/app/modules/admin/domains/users/services/activity-log.service.ts","./src/app/modules/admin/domains/users/services/req-cred.service.ts","./src/app/modules/admin/domains/users/user.endpoint.ts","./src/app/modules/admin/domains/users/user.module.ts","./src/app/modules/admin/domains/users/user.route.ts","./src/app/modules/admin/domains/users/users/components/user-list/user-list.component.ts","./src/app/modules/admin/domains/users/users/components/user-list/user-list.component.html","./src/app/modules/admin/domains/users/users/components/user-select/user-select.component.ts","./src/app/modules/admin/domains/users/users/components/user-select/user-select.component.html","./src/app/modules/admin/domains/users/users/components/user-upsert/user-upsert.component.ts","./src/app/modules/admin/domains/users/users/components/user-upsert/user-upsert.component.html","./src/app/modules/admin/domains/users/users/models/config.model.ts","./src/app/modules/admin/domains/users/users/services/user.service.ts","./src/app/modules/admin/domains/users/users/user.component.ts","./src/app/modules/admin/domains/users/users/user.component.html"],"sourcesContent":["import {Component} from '@angular/core';\nimport {defaultPage, IPage} from \"../../../../../../base/models/IPage\";\nimport {NotifierService} from \"../../../../../../services/notifier/notifier.service\";\nimport {EventBusService} from \"../../../../../../services/eventbus/event-bus.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {SubscriptionContainerService} from \"../../../../../../base/services/subscription-container.service\";\nimport * as moment from \"moment\";\nimport {TimeUtility} from \"../../../../../common/modules/utility/time.utility\";\nimport {IParams} from \"../../../../../../base/endpoints/iparams\";\nimport {EventKey} from \"../../../../../../services/eventbus/event.key\";\nimport {MetaData} from \"ng-event-bus/lib/meta-data\";\nimport {PageEvent} from \"@angular/material/paginator\";\nimport {BaseComponent} from \"../../../../../../base/components/base.component\";\nimport {ActivityLogService} from \"../../services/activity-log.service\";\nimport {IActivityLog} from \"../../models/activity-logs.model\";\n\n@Component({\n  selector: 'app-activity-log',\n  templateUrl: './activity-log.component.html',\n  styleUrls: ['./activity-log.component.scss']\n})\nexport class ActivityLogComponent extends BaseComponent {\n  size: number = 10;\n  page: number = 1;\n  activityLogs: IPage<IActivityLog> = defaultPage\n\n  username: string | null = null\n  created_from: Date = new Date()\n  created_to: Date = new Date()\n\n  constructor(private notifier: NotifierService,\n              eventBus: EventBusService,\n              router: Router,\n              subContainer: SubscriptionContainerService,\n              private activatedRoute: ActivatedRoute,\n              private activityLogService: ActivityLogService) {\n    super(eventBus, router, subContainer)\n  }\n\n\n  protected componentName(): string {\n    return \"ActivityLogComponent\";\n  }\n\n  ngOnInit(): void {\n    this.activatedRoute.queryParams.subscribe(params => {\n      let from = params['from_date']\n      let to = params['to_date']\n      let page = params['page']\n      let size = params['size']\n\n      if (from != null && to != null) {\n        this.created_from = moment(from).toDate();\n        this.created_to = moment(to).toDate();\n      } else {\n        this.created_from = TimeUtility.getDayStart(new Date(0))\n        this.created_to = TimeUtility.getDayEnd(new Date())\n      }\n\n      this.searchActivityLogs({\n        username: this.username,\n        from_date: TimeUtility.getDayStart(this.created_from),\n        to_date: TimeUtility.getDayEnd(this.created_to),\n        page: page,\n        size: size,\n      })\n\n    });\n  }\n\n  private searchActivityLogs(params: IParams) {\n    // console.log(this.username)\n    this.loading = true\n    const key = this.componentKey(EventKey.REQUEST_CREDENTIALS.ADMIN_SEARCH_LOCKOUTS())\n    this.activityLogService.search(key, params)\n    this.subscribe(key, null, (value: Boolean, meta: MetaData) => {\n      this.activityLogs = meta.data\n      this.loading = false\n    })\n    this.subscribe(this.getErrorKey(key), null, (value, meta) => {\n      this.notifier.log(meta.data)\n    })\n  }\n\n}\n","<div class=\"row\">\n  <util-progress *ngIf=\"loading\" [bar]=\"true\"></util-progress>\n  <div class=\"col-12\">\n    <div class=\"card\">\n      <div class=\"card-body\">\n\n        <h4 class=\"card-title\">Activity Log</h4>\n        <p class=\"card-title-desc\">Activity logs for users</p>\n\n        <app-basic-filter></app-basic-filter>\n\n        <div class=\"table-responsive\">\n          <table\n            class=\"table table-responsive table-editable table-nowrap align-middle table-edits table-hover table-bordered\">\n            <thead>\n            <tr>\n              <th><h6>USER ID</h6></th>\n              <th><h6>USERNAME</h6></th>\n              <th><h6>USER AGENT</h6></th>\n              <th><h6>IP</h6></th>\n              <th><h6>R. METHOD</h6></th>\n              <th><h6>URL</h6></th>\n              <th><h6>TOTAL VISITORS</h6></th>\n              <th><h6>CREATED AT</h6></th>\n              <th><h6>LAST UPDATED</h6></th>\n              <!--                    <th><h6>ACTION</h6></th>-->\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let u of activityLogs?.content\">\n              <td>{{u.user_id}}</td>\n              <td>{{u.username}}</td>\n              <td>{{u.user_agent}}</td>\n              <td>{{u.ip}}</td>\n              <td>{{u.request_method}}</td>\n              <td>{{u.url}}</td>\n              <td>{{u.total_visitors}}</td>\n              <td>{{u.created_at | readableDate}}</td>\n              <td>{{u.updated_at | readableDate}}</td>\n            </tbody>\n          </table>\n        </div>\n\n\n        <app-pagination\n          [page]=\"activityLogs!!\"\n        ></app-pagination>\n\n      </div>\n    </div>\n  </div> <!-- end col -->\n</div>\n","import {Component} from '@angular/core';\nimport {IPage} from \"../../../../../../base/models/IPage\";\nimport {NotifierService} from \"../../../../../../services/notifier/notifier.service\";\nimport {EventBusService} from \"../../../../../../services/eventbus/event-bus.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {SubscriptionContainerService} from \"../../../../../../base/services/subscription-container.service\";\nimport * as moment from \"moment\";\nimport {TimeUtility} from \"../../../../../common/modules/utility/time.utility\";\nimport {IParams} from \"../../../../../../base/endpoints/iparams\";\nimport {EventKey} from \"../../../../../../services/eventbus/event.key\";\nimport {MetaData} from \"ng-event-bus/lib/meta-data\";\nimport {PageEvent} from \"@angular/material/paginator\";\nimport {BaseComponent} from \"../../../../../../base/components/base.component\";\nimport {IRequestCredentials} from \"../../models/request-credentials.model\";\nimport {ReqCredService} from \"../../services/req-cred.service\";\n\n@Component({\n  selector: 'app-activity-log',\n  templateUrl: './request-credentials.component.html',\n  styleUrls: ['./request-credentials.component.scss']\n})\nexport class RequestCredentialsComponent extends BaseComponent {\n  size: number = 10;\n  page: number = 1;\n  requestCredentials: IPage<IRequestCredentials> | undefined\n\n  created_from: Date = new Date()\n  created_to: Date = new Date()\n\n  constructor(private notifier: NotifierService,\n              eventBus: EventBusService,\n              router: Router,\n              subContainer: SubscriptionContainerService,\n              private activatedRoute: ActivatedRoute,\n              private reqCredService: ReqCredService) {\n    super(eventBus, router, subContainer)\n  }\n\n\n  protected componentName(): string {\n    return \"RequestCredentialsComponent\";\n  }\n\n  ngOnInit(): void {\n    this.activatedRoute.queryParams.subscribe(params => {\n      let from = params['from_date']\n      let to = params['to_date']\n\n      if (from != null && to != null) {\n        this.created_from = moment(from).toDate();\n        this.created_to = moment(to).toDate();\n      } else {\n        this.created_from = new Date(0)\n        this.created_to = new Date()\n      }\n    });\n\n    this.searchRequestCredentials({\n      created_from: this.created_from == null ? this.created_from : TimeUtility.getDayStart(this.created_from),\n      created_to: this.created_to == null ? this.created_to : TimeUtility.getDayEnd(this.created_to),\n      page: 0, size: this.size,\n    })\n  }\n\n\n  onFilterClick() {\n    this.searchRequestCredentials({\n      created_from: TimeUtility.getDayStart(this.created_from),\n      created_to: TimeUtility.getDayEnd(this.created_to),\n      page: 0,\n      size: this.size,\n    })\n  }\n\n\n  private searchRequestCredentials(params: IParams) {\n    // console.log(this.username)\n    this.loading = true\n    const key = this.componentKey(EventKey.REQUEST_CREDENTIALS.ADMIN_SEARCH_LOCKOUTS())\n    this.reqCredService.search(key, params)\n    this.subscribe(key, null, (value: Boolean, meta: MetaData) => {\n      this.requestCredentials = meta.data\n      this.loading = false\n    })\n    this.subscribe(this.getErrorKey(key), null, (value, meta) => {\n      this.notifier.log(meta.data)\n    })\n  }\n\n  onPageChanged(event: PageEvent) {\n    this.searchRequestCredentials({\n      created_from: this.created_from,\n      created_to: this.created_to,\n      page: event.pageIndex,\n      size: this.size,\n    })\n  }\n\n  filterForToday() {\n    this.created_from = TimeUtility.getDayStart(new Date())\n    this.created_to = TimeUtility.getDayEnd(new Date())\n\n    this.searchRequestCredentials({\n      created_from: this.created_from,\n      created_to: this.created_to,\n      page: 0,\n      size: this.size,\n    })\n  }\n\n  clearFilter() {\n    this.created_from = TimeUtility.getDayStart(new Date(0))\n    this.created_to = TimeUtility.getDayEnd(new Date())\n    this.searchRequestCredentials({\n      created_from: this.created_from,\n      created_to: this.created_to,\n      page: 0,\n      size: this.size,\n    })\n  }\n}\n","<div class=\"row\">\n  <util-progress *ngIf=\"loading\" [bar]=\"true\"></util-progress>\n  <div class=\"col-12\">\n    <div class=\"card\">\n      <div class=\"card-body\">\n\n        <h4 class=\"card-title\">Lockouts</h4>\n        <p class=\"card-title-desc\">List of lockouts that happened to the users because of failed login.</p>\n\n        <form class=\"row gy-2 gx-3 mb-3 align-items-center\">\n          <div class=\"col-sm-auto\">\n            <button type=\"submit\" class=\"btn btn-info w-md\" (click)=\"filterForToday()\">Today</button>\n          </div>\n\n          <div class=\"col-sm-auto\">\n            <label class=\"visually-hidden\" for=\"fromDate\">From</label>\n            <div class=\"input-group\">\n              <input class=\"form-control\" bsDatepicker id=\"fromDate\"\n                     [bsConfig]=\"{ dateInputFormat: 'DD-MM-YYYY h:mm:ss a' }\"\n                     [(ngModel)]=\"created_from\"\n                     [ngModelOptions]=\"{standalone: true}\" [maxDate]=\"created_to\">\n            </div>\n          </div>\n\n          <div class=\"col-sm-auto\">\n            <label class=\"visually-hidden\" for=\"toDate\">To</label>\n            <div class=\"input-group\">\n              <input class=\"form-control\" bsDatepicker id=\"toDate\"\n                     [bsConfig]=\"{ dateInputFormat: 'DD-MM-YYYY h:mm:ss a' }\"\n                     [(ngModel)]=\"created_to\"\n                     [ngModelOptions]=\"{standalone: true}\" [minDate]=\"created_from\">\n            </div>\n          </div>\n\n          <div class=\"col-sm-auto\">\n            <button type=\"submit\" class=\"btn btn-primary w-md\" (click)=\"onFilterClick()\">Filter</button>\n          </div>\n          <div class=\"col-sm-auto\">\n            <button type=\"submit\" class=\"btn btn-warning w-md\" (click)=\"clearFilter()\">Clear</button>\n          </div>\n\n        </form>\n\n        <div class=\"table-responsive\">\n          <table\n            class=\"table table-responsive table-editable table-nowrap align-middle table-edits table-hover table-bordered\">\n            <thead>\n            <tr>\n              <th>IP</th>\n              <th>URL</th>\n              <th>Body</th>\n              <th>User Agent Header</th>\n              <th>X Forwarded For Header</th>\n              <th>Authorization Header</th>\n              <th>Cookie Header</th>\n              <th>Referer Header</th>\n              <th>X Frame Options Header</th>\n              <th>Content Type Header</th>\n              <th>Origin Header</th>\n              <th>X HTTP Method Override Header</th>\n              <th>Content Security Policy Header</th>\n              <th>Accept Charset Header</th>\n              <th>Accept Datetime Header</th>\n              <th>Accept Encoding Header</th>\n              <th>Accept Header</th>\n              <th>Accept Language Header</th>\n              <th>Access Control Allow Credentials Header</th>\n              <th>Access Control Allow Headers Header</th>\n              <th>Access Control Allow Methods Header</th>\n              <th>Access Control Allow Origin Header</th>\n              <th>Access Control Expose Headers Header</th>\n              <th>Access Control Max Age Header</th>\n              <th>Access Control Request Headers Header</th>\n              <th>Access Control Request Method Header</th>\n              <th>Authorization Info Header</th>\n              <th>Cache Control Header</th>\n              <th>Connection Header</th>\n              <th>Content Encoding Header</th>\n              <th>Content Length Header</th>\n              <th>DNT Header</th>\n              <th>Forward Header</th>\n              <th>Forwarded For Header</th>\n              <th>Host Header</th>\n              <th>If Modified Since Header</th>\n              <th>If None Match Header</th>\n              <th>If Range Header</th>\n              <th>If Unmodified Since Header</th>\n              <th>Max Forwards Header</th>\n              <th>Pragma Header</th>\n              <th>Proxy Authorization Header</th>\n              <th>Range Header</th>\n              <th>TE Header</th>\n              <th>Upgrade Header</th>\n              <th>Via Header</th>\n              <th>Warning Header</th>\n              <th>X Forwarded Host Header</th>\n              <th>X Forwarded Proto Header</th>\n              <th>X Requested With Header</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let credentials of requestCredentials?.content\">\n              <td>{{credentials.ip}}</td>\n              <td>{{credentials.url}}</td>\n              <td>{{credentials.body}}</td>\n              <td>{{credentials.user_agent_header}}</td>\n              <td>{{credentials.forwarded_for_header}}</td>\n              <td>{{credentials.authorization_header}}</td>\n              <td>{{credentials.cookie_header}}</td>\n              <td>{{credentials.referer_header}}</td>\n              <td>{{credentials.x_frame_options_header}}</td>\n              <td>{{credentials.content_type_header}}</td>\n              <td>{{credentials.origin_header}}</td>\n              <td>{{credentials.x_http_method_override_header}}</td>\n              <td>{{credentials.content_security_policy_header}}</td>\n              <td>{{credentials.accept_charset_header}}</td>\n              <td>{{credentials.accept_datetime_header}}</td>\n              <td>{{credentials.accept_encoding_header}}</td>\n              <td>{{credentials.accept_header}}</td>\n              <td>{{credentials.accept_language_header}}</td>\n              <td>{{credentials.access_control_allow_credentials_header}}</td>\n              <td>{{credentials.access_control_allow_headers_header}}</td>\n              <td>{{credentials.access_control_allow_methods_header}}</td>\n              <td>{{credentials.access_control_allow_origin_header}}</td>\n              <td>{{credentials.access_control_expose_headers_header}}</td>\n              <td>{{credentials.access_control_max_age_header}}</td>\n              <td>{{credentials.access_control_request_headers_header}}</td>\n              <td>{{credentials.access_control_request_method_header}}</td>\n              <td>{{credentials.authorization_info_header}}</td>\n              <td>{{credentials.cache_control_header}}</td>\n              <td>{{credentials.connection_header}}</td>\n              <td>{{credentials.content_encoding_header}}</td>\n              <td>{{credentials.content_length_header}}</td>\n              <td>{{credentials.dnt_header}}</td>\n              <td>{{credentials.forward_header}}</td>\n              <td>{{credentials.host_header}}</td>\n              <td>{{credentials.if_modified_since_header}}</td>\n              <td>{{credentials.if_none_match_header}}</td>\n              <td>{{credentials.if_range_header}}</td>\n              <td>{{credentials.if_unmodified_since_header}}</td>\n              <td>{{credentials.max_forwards_header}}</td>\n              <td>{{credentials.pragma_header}}</td>\n              <td>{{credentials.proxy_authorization_header}}</td>\n              <td>{{credentials.range_header}}</td>\n              <td>{{credentials.te_header}}</td>\n              <td>{{credentials.upgrade_header}}</td>\n              <td>{{credentials.via_header}}</td>\n              <td>{{credentials.warning_header}}</td>\n              <td>{{credentials.x_forwarded_for_header}}</td>\n              <td>{{credentials.x_forwarded_host_header}}</td>\n              <td>{{credentials.x_forwarded_proto_header}}</td>\n              <td>{{credentials.x_requested_with_header}}</td>\n            </tr>\n            </tbody>\n          </table>\n\n        </div>\n\n        <div class=\"col-lg-12 grid-margin stretch-card\">\n          <div class=\"card\">\n            <mat-paginator [length]=\"requestCredentials?.totalElements\"\n                           [pageSize]=\"requestCredentials?.size\"\n                           (page)=\"onPageChanged($event)\"\n                           aria-label=\"Select page\">\n            </mat-paginator>\n          </div>\n        </div>\n\n      </div>\n    </div>\n  </div> <!-- end col -->\n</div>\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss']\n})\nexport class UsersComponent {\n}\n","<app-user-list></app-user-list>\n","import {Injectable} from '@angular/core';\nimport {AuthService} from \"../../../../common/modules/auth/services/auth.service\";\nimport {NotifierService} from \"../../../../../services/notifier/notifier.service\";\nimport {HttpClient, HttpErrorResponse} from \"@angular/common/http\";\nimport {EventBusService} from \"../../../../../services/eventbus/event-bus.service\";\nimport {BaseService} from \"../../../../../base/services/base.service\";\nimport {IParams} from \"../../../../../base/endpoints/iparams\";\nimport {IPage} from \"../../../../../base/models/IPage\";\nimport {WebAppEndpoint} from \"../../../../webapp/web-app.endpoint\";\nimport {IActivityLog} from \"../models/activity-logs.model\";\nimport {IAuth} from \"../../../../common/modules/auth/models/auth.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActivityLogService extends BaseService {\n\n  constructor(\n    authService: AuthService,\n    notifier: NotifierService,\n    private http: HttpClient,\n    private eventBus: EventBusService\n  ) {\n    super(authService, notifier)\n  }\n\n  search(key: string, params: IParams) {\n    this.http.get<IPage<IActivityLog>>(WebAppEndpoint.ACTIVITY_LOGS.ADMIN_SEARCH(params))\n      .subscribe((res: IPage<IActivityLog>) => {\n        this.eventBus.publish(key, res)\n      }, (error: HttpErrorResponse) => {\n        this.handleError(error, (auth: IAuth) => {\n          this.search(key, params)\n        }, (err: HttpErrorResponse) => {\n          this.eventBus.publish(this.getErrorKey(key), err)\n        })\n      })\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {BaseService} from \"../../../../../base/services/base.service\";\nimport {AuthService} from \"../../../../common/modules/auth/services/auth.service\";\nimport {NotifierService} from \"../../../../../services/notifier/notifier.service\";\nimport {HttpClient, HttpErrorResponse} from \"@angular/common/http\";\nimport {EventBusService} from \"../../../../../services/eventbus/event-bus.service\";\nimport {IParams} from \"../../../../../base/endpoints/iparams\";\nimport {IPage} from \"../../../../../base/models/IPage\";\nimport {WebAppEndpoint} from \"../../../../webapp/web-app.endpoint\";\nimport {IRequestCredentials} from \"../models/request-credentials.model\";\nimport {IAuth} from \"../../../../common/modules/auth/models/auth.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReqCredService extends BaseService{\n\n  constructor(\n    authService: AuthService,\n    notifier: NotifierService,\n    private http: HttpClient,\n    private eventBus: EventBusService\n  ) {\n    super(authService, notifier)\n  }\n\n  search(key: string, params: IParams) {\n    this.http.get<IPage<IRequestCredentials>>(WebAppEndpoint.REQUEST_CREDENTIALS.ADMIN_SEARCH_LOCKOUTS(params))\n      .subscribe((res: IPage<IRequestCredentials>) => {\n        this.eventBus.publish(key, res)\n      }, (error: HttpErrorResponse) => {\n        this.handleError(error, (auth: IAuth) => {\n          this.search(key, params)\n        }, (err: HttpErrorResponse) => {\n          this.eventBus.publish(this.getErrorKey(key), err)\n        })\n      })\n  }\n}\n","import {Injectable} from \"@angular/core\";\nimport {BaseEndpoint} from \"../../../../base/endpoints/base.endpoint\";\nimport {IParams} from \"../../../../base/endpoints/iparams\";\nimport {environment} from \"../../../../../environments/environment\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserEndpoints extends BaseEndpoint {\n\n  constructor() {\n    super();\n  }\n\n  static USERS = {\n    USER_ENDPOINT: environment.base_url + '/api/v1/users',\n    USER_ENDPOINT_ADMIN: environment.base_url + '/api/v1/admin/users',\n    SEARCH(endpoint: string, params: IParams) {\n      return endpoint.concat(BaseEndpoint.toParamString(params));\n    },\n    CREATE(): string {\n      return this.USER_ENDPOINT\n    },\n    GET(id: number): string {\n      return this.USER_ENDPOINT + '/' + id\n    },\n    UPDATE(id: number): string {\n      return this.USER_ENDPOINT + '/' + id\n    },\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {UtilityModule} from \"../../../common/modules/utility/utility.module\";\nimport {BsDatepickerModule} from \"ngx-bootstrap/datepicker\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {MatPaginatorModule} from \"@angular/material/paginator\";\nimport {ActivityLogComponent} from './pages/activity-log/activity-log.component';\nimport {UserRoute} from \"./user.route\";\nimport {RequestCredentialsComponent} from \"./pages/request-credentials/request-credentials.component\";\nimport {UserComponent} from \"./users/user.component\";\nimport {UsersComponent} from \"./pages/users/users.component\";\nimport {UserListComponent} from \"./users/components/user-list/user-list.component\";\nimport {UserUpsertComponent} from \"./users/components/user-upsert/user-upsert.component\";\nimport {UserSelectComponent} from \"./users/components/user-select/user-select.component\";\nimport {CmsModule} from \"../../../common/modules/cms/cms.module\";\nimport {AdminModule} from \"../../admin.module\";\nimport {NgSelectModule} from \"@ng-select/ng-select\";\n\n@NgModule({\n  declarations: [\n    UsersComponent,\n    ActivityLogComponent,\n    RequestCredentialsComponent,\n    UserComponent,\n    UserListComponent,\n    UserUpsertComponent,\n    UserSelectComponent,\n  ],\n  exports: [\n    UserSelectComponent\n  ],\n  imports: [\n    CommonModule,\n    BsDatepickerModule,\n    FormsModule,\n    MatPaginatorModule,\n    UserRoute,\n    CmsModule,\n    ReactiveFormsModule,\n    UtilityModule,\n    AdminModule,\n    NgSelectModule\n  ]\n})\nexport class UserModule { }\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {ActivityLogComponent} from \"./pages/activity-log/activity-log.component\";\nimport {RequestCredentialsComponent} from \"./pages/request-credentials/request-credentials.component\";\nimport {AcValidationTokenComponent} from \"./acvalidationtokens/acvalidationtoken.component\";\nimport {UserComponent} from \"./users/user.component\";\nimport {UserUpsertComponent} from \"./users/components/user-upsert/user-upsert.component\";\n\nconst routes: Routes = [\n  {path: '', component: UserComponent},\n  {path: 'create', component: UserUpsertComponent},\n  {path: ':id/update', component: UserUpsertComponent},\n  {path: 'activity-logs', component: ActivityLogComponent},\n  {path: 'request-credentials/lockouts', component: RequestCredentialsComponent},\n  {path: 'validation-tokens', component: AcValidationTokenComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserRoute {\n}\n","import {Component} from '@angular/core';\nimport {BaseListComponentV2} from \"../../../../../../../base/components/base-list-v2.component\";\nimport {defaultUserConfig, selfEndpoints, selfRoutes, UserConfig} from \"../../models/config.model\";\nimport {\n  BasicFilterData, defaultFilterData,\n  parseFilterData, toParams\n} from \"../../../../../../common/modules/utility/components/basic-filter/basic-filter.model\";\nimport {defaultPage, IPage} from \"../../../../../../../base/models/IPage\";\nimport {EventBusService} from \"../../../../../../../services/eventbus/event-bus.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {SubscriptionContainerService} from \"../../../../../../../base/services/subscription-container.service\";\nimport {AuthService} from \"../../../../../../common/modules/auth/services/auth.service\";\nimport {DialogService} from \"../../../../../../common/modules/utility/components/popup/dialog.service\";\nimport {NotifierService} from \"../../../../../../../services/notifier/notifier.service\";\nimport {BreadcrumbItem} from \"../../../../../components/breadcrumb/breadcrumb.model\";\nimport {IParams} from \"../../../../../../../base/endpoints/iparams\";\nimport {EventKey} from \"../../../../../../../services/eventbus/event.key\";\nimport {MetaData} from \"ng-event-bus/lib/meta-data\";\nimport {BaseConfig} from \"../../../../../../../base/models/baseConfig\";\nimport {ComponentType} from \"@angular/cdk/overlay\";\nimport {UserUpsertComponent} from \"../user-upsert/user-upsert.component\";\nimport {BaseUpsertComponentV2} from \"../../../../../../../base/components/base-upsert-v2.component\";\nimport {IUserBrief} from \"../../models/user.model\";\nimport {UserService} from \"../../services/user.service\";\n\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.scss']\n})\nexport class UserListComponent extends BaseListComponentV2<IUserBrief> {\n\n  config: UserConfig = defaultUserConfig\n  filterData: BasicFilterData = defaultFilterData\n\n  users: IPage<IUserBrief> = defaultPage\n\n  protected componentName(): string {\n    return \"UserListComponent\";\n  }\n\n  constructor(eventBus: EventBusService,\n              router: Router,\n              subContainer: SubscriptionContainerService,\n              authService: AuthService,\n              dialog: DialogService<IUserBrief>,\n              private activatedRoute: ActivatedRoute,\n              private userService: UserService,\n              private notifier: NotifierService,\n  ) {\n    super(eventBus, router, subContainer, dialog)\n    if (authService.isAdmin()) {\n      this.config.searchEndpoint = selfEndpoints.adminEndpoint\n    }\n  }\n\n  initialize(): void {\n    this.activatedRoute.queryParams.subscribe(params => {\n      this.filterData = parseFilterData(params)\n      this.fetchUsers({\n        q: this.filterData.query,\n        username: this.filterData.username,\n        from_date: this.filterData.fromDate,\n        to_date: this.filterData.toDate,\n        page: this.filterData.page,\n        size: this.filterData.size\n      })\n    });\n  }\n\n  protected override getBreadcrumbItems(): BreadcrumbItem[] {\n    return [\n      {\n         text: this.translations[\"Dashboard\"],\n        link: null,\n        active: false\n      },\n      {\n        text: \"Users\",\n        link: null,\n        active: true\n      }\n    ]\n  }\n\n  private fetchUsers(params: IParams) {\n    this.loading = true\n    const key = this.componentKey(EventKey.USERS.SEARCH(params))\n    this.userService.search(key, this.config.searchEndpoint, params)\n    this.subscribe(\n      key,\n      null,\n      (value: Boolean, meta: MetaData) => {\n        this.users = meta.data\n        this.loading = false\n      })\n    this.subscribe(this.getErrorKey(key), null, (value, meta) => {\n      this.notifier.error('Error', meta.data.error.message)\n    })\n  }\n\n  onDeleted(deleted: Boolean) {\n    if (deleted) {\n      this.notifier.success(\"Success\", \"User is deleted\")\n      this.ngOnInit()\n    }\n  }\n\n  override getConfig(): BaseConfig {\n    return this.config\n  }\n\n  override getRoutes(): { create: string, update: (id: number) => string, params: IParams } | null {\n    return {\n      create: selfRoutes.create,\n      update: (id: number) => selfRoutes.update(id),\n      params: toParams(this.filterData)\n    }\n  }\n\n  getUpsertComponent(): ComponentType<BaseUpsertComponentV2<IUserBrief>> | null {\n    return UserUpsertComponent\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-sm-12\">\n    <app-breadcrumb\n      [title]=\"'Users'\"\n      [layout]=\"layout\"\n      [breadcrumbItems]=\"breadcrumbItems\"\n      (layoutSelected)=\"onLayoutSelected($event)\"\n    ></app-breadcrumb>\n  </div>\n</div>\n<div class=\"row\">\n  <div class=\"col-sm-12\">\n    <div class=\"card card-body\">\n      <app-basic-filter\n        (addButtonClick)=\"onUpsertClick(null)\"\n      ></app-basic-filter>\n    </div>\n  </div>\n</div>\n\n<util-progress *ngIf=\"loading\" [bar]=\"true\"></util-progress>\n\n<div class=\"account-pages my-2\" *ngIf=\"users.empty\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-lg-12\">\n        <div class=\"text-center mb-5\">\n          <h1 class=\"display-2 fw-medium\"><i class=\"bx bx-buoy bx-spin text-primary display-3\"></i></h1>\n          <h4 class=\"text-primary\" *ngIf=\"loading\">Cooking your data, please wait..</h4>\n          <h4 class=\"text-uppercase\" *ngIf=\"!loading\">No items</h4>\n        </div>\n      </div>\n    </div>\n    <div class=\"row justify-content-center\">\n      <div class=\"col-md-8 col-xl-6\">\n        <div>\n          <img src=\"/assets/apanel/images/error-img.png\" alt=\"\" class=\"img-fluid\">\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div *ngIf=\"!users.empty\">\n  <div class=\"row\" *ngIf=\"layout === Layout.COLUMN\"\n       [@dataLoaded]=\"loading?'loading':'loaded'\"\n       [@onColumn]=\"layout==Layout.COLUMN\">\n    <div class=\"col-12\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <p class=\"card-title-desc\">Users that I've created</p>\n          <div class=\"table table-responsive\">\n            <table class=\"table table-editable table-nowrap align-middle table-edits table-hover table-bordered\">\n              <thead>\n              <tr>\n                <th>Id</th>\n                <th *ngIf=\"config.showUserFilter\">Created By</th>\n                <th>Image</th>\n                <th>Username</th>\n                <th>Name</th>\n                <th>Gender</th>\n                <th>Phone</th>\n                <th>Email</th>\n                <th>Created At</th>\n                <th>Last Updated</th>\n                <th>Update</th>\n                <th *ngIf=\"config.showDeleteButton\">Delete</th>\n              </tr>\n              </thead>\n              <tbody>\n              <tr *ngFor=\"let item of users.content\">\n                <td>{{ item.id }}</td>\n                <td *ngIf=\"config.showUserFilter\">{{ item.created_by }}</td>\n                <td>{{ item.username }}</td>\n                <td>\n                  <div class=\"avatar-sm mx-auto\">\n                    <img *ngIf=\"item.avatar!=null\" class=\"rounded-circle avatar-sm object-fit-cover\" src=\"{{item.avatar}}\"\n                         alt=\"\">\n                    <span *ngIf=\"item.avatar==null\"\n                          class=\"avatar-title rounded-circle bg-primary-subtle text-primary font-size-16\">\n                          {{ item.name.substring(0, 1).toUpperCase() }}\n                      </span>\n                  </div>\n                </td>\n                <td>\n                  <a href=\"javascript: void(0);\"\n                     (click)=\"onUpsertClick(item.id)\">\n                    {{ item.name }}\n                  </a>\n                </td>\n                <td>{{item.gender}}</td>\n                <td>{{item.phone}}</td>\n                <td>{{item.email}}</td>\n                <td><small>{{ item.created_at | readableDate }}</small></td>\n                <td><small>{{ item.updated_at | readableDate }}</small></td>\n\n                <td style=\"width: 100px\">\n                  <a (click)=\"onUpsertClick(item.id)\"\n                     class=\"btn btn-outline-warning btn-sm edit\" title=\"Edit\">\n                    <i class=\"fas fa-pencil-alt\"></i>\n                  </a>\n                </td>\n\n                <td *ngIf=\"config.showDeleteButton\" style=\"width: 100px\">\n                  <app-delete [requestUrl]=\"config.delEndpoint +'/'+item.id\"\n                              (deleteItemEvent)=\"onDeleted($event)\"\n                  ></app-delete>\n                </td>\n              </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div> <!-- end col -->\n  </div>\n\n  <div *ngIf=\"layout === Layout.GRID\" class=\"row\"\n       [@dataLoaded]=\"loading?'loading':'loaded'\"\n       [@onGrid]=\"layout==Layout.GRID\">\n    <div class=\"col-xxl-2 col-xl-3 col-sm-4\" *ngFor=\"let item of users.content\">\n      <div class=\"card text-center\">\n        <div class=\"card-body\">\n          <div class=\"mb-4\" *ngIf=\"item.avatar\">\n            <img class=\"rounded-circle avatar-sm object-fit-cover\" src=\"{{item.avatar}}\" alt=\"\">\n          </div>\n          <div class=\"avatar-sm mx-auto mb-4\" *ngIf=\"item.avatar==null\">\n            <span class=\"avatar-title rounded-circle bg-primary-subtle text-primary font-size-16\">\n                {{ item.name.substring(0, 1).toUpperCase() }}\n            </span>\n          </div>\n          <h5 class=\"font-size-15 mb-1\">\n            <a href=\"javascript: void(0);\" class=\"text-dark\"\n               (click)=\"onUpsertClick(item.id)\">\n              {{ item.name }}</a>\n          </h5>\n          <h6 class=\"font-size-10 text-info\" *ngIf=\"config.showUserFilter && item.created_by\">By {{ item.created_by }}</h6>\n          <div class=\"row\">\n            <div class=\"col-6 col-sm-6\">\n              <p class=\"text-muted text-end\">\n                <small><b>Created</b><br/>{{ item.created_at | readableDate }}</small>\n              </p>\n            </div>\n            <div class=\"col-6 col-sm-6\">\n              <p class=\"text-muted text-start\">\n                <small *ngIf=\"item.updated_at\" class=\"font-size-10\"><b>Updated</b><br/>\n                  {{ item.updated_at | readableDate }}\n                </small>\n                <small *ngIf=\"!item.updated_at\" class=\"font-size-10\"><br/><b>Updated</b><br/>Nil</small>\n              </p>\n            </div>\n          </div>\n          <p>\n            <span *ngIf=\"item.phone\">Phone: {{ item.phone }}<br/></span>\n            <span *ngIf=\"item.email\">Email: {{ item.phone }}</span>\n          </p>\n\n          <div>\n            <a href=\"javascript: void(0);\">\n              <label class=\"badge bg-success font-size-11 m-1\">Approved</label>\n            </a>\n          </div>\n        </div>\n        <div class=\"card-footer bg-transparent border-top\">\n          <div class=\"contact-links d-flex font-size-20\">\n            <div class=\"flex-fill\">\n              <a href=\"javascript: void(0);\" (click)=\"onUpsertClick(item.id)\">\n                <i class=\"bx bx-edit text-primary\"></i>\n              </a>\n            </div>\n            <div class=\"flex-fill\" *ngIf=\"config.showDeleteButton\">\n              <app-delete [requestUrl]=\"config.delEndpoint +'/'+item.id\"\n                          (deleteItemEvent)=\"onDeleted($event)\" [look]=\"'bx'\"></app-delete>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<app-pagination [page]=\"users\"></app-pagination>\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {UserUpsertComponent} from \"../user-upsert/user-upsert.component\";\nimport {selfEndpoints} from \"../../models/config.model\";\nimport {BaseComponent} from \"../../../../../../../base/components/base.component\";\nimport {EventBusService} from \"../../../../../../../services/eventbus/event-bus.service\";\nimport {Router} from \"@angular/router\";\nimport {SubscriptionContainerService} from \"../../../../../../../base/services/subscription-container.service\";\nimport {AuthService} from \"../../../../../../common/modules/auth/services/auth.service\";\nimport {DialogService} from \"../../../../../../common/modules/utility/components/popup/dialog.service\";\nimport {TextUtility} from \"../../../../../../common/modules/utility/text.utility\";\nimport {IParams} from \"../../../../../../../base/endpoints/iparams\";\nimport {EventKey} from \"../../../../../../../services/eventbus/event.key\";\nimport {IUserBrief} from \"../../models/user.model\";\nimport {UserService} from \"../../services/user.service\";\n\n@Component({\n  selector: 'app-user-select',\n  templateUrl: './user-select.component.html',\n  styleUrls: ['./user-select.component.scss']\n})\nexport class UserSelectComponent extends BaseComponent {\n  @Input() enableAdd: boolean = true\n\n  @Input() searchEndpoint: string = selfEndpoints.endpoint\n\n  items: IUserBrief[] = []\n  @Input() selectedItem: IUserBrief | null = null\n  @Output() selected: EventEmitter<IUserBrief | null> = new EventEmitter<IUserBrief | null>()\n\n  protected override componentName(): string {\n    return \"UserSelectComponent\";\n  }\n\n  constructor(eventBus: EventBusService,\n              router: Router,\n              subContainer: SubscriptionContainerService,\n              authService: AuthService,\n              private userService: UserService,\n              private popupService: DialogService<IUserBrief>) {\n    super(eventBus, router, subContainer)\n\n    if (authService.isAdmin()) {\n      this.searchEndpoint = selfEndpoints.adminEndpoint\n    }\n  }\n\n  override ngOnInit(): void {\n    this.loading = false\n    this.search({\n      page: 0, size: 10, q: null\n    })\n  }\n\n  searchForEvent(event: any) {\n    let query = TextUtility.removeSpecialCharacters(event.target?.value)\n    if (query.length > 2) {\n      this.search({\n        page: 0, size: 10, q: query\n      })\n    }\n  }\n\n  onSelected(event: any) {\n    if (event == null) {\n      this.selected.emit(null)\n    } else if (this.items.find(c => c.name == event.name)) {\n      this.selected.emit(this.selectedItem)\n    } else {\n      let popup = this.popupService.open(\n        UserUpsertComponent, {id: null, title: event.title}\n      )\n      popup.componentInstance.onCompleted.subscribe((user: IUserBrief | null) => {\n          this.selected.emit(user)\n        }\n      )\n    }\n  }\n\n  search(params: IParams) {\n    this.loading = true\n    let key = this.componentKey(EventKey.USERS.SEARCH(params))\n    this.userService.search(key, this.searchEndpoint, params)\n    this.subscribe(key, null, (value, meta) => {\n      this.items = meta.data.content\n      this.loading = false\n    })\n  }\n}\n","<label class=\"visually-hidden\" for=\"user-select\">User</label>\n<util-progress *ngIf=\"loading\" [bar]=\"true\"></util-progress>\n<ng-select\n  id=\"user-select\"\n  [items]=\"items\"\n  [hideSelected]=\"true\"\n  [multiple]=\"false\"\n  [addTag]=\"enableAdd\"\n  (keyup)=\"searchForEvent($event)\"\n  bindLabel=\"label\"\n  [(ngModel)]=\"selectedItem\"\n  (change)=\"onSelected($event)\"\n  [ngModelOptions]=\"{standalone: true}\"\n  placeholder=\"Search User\">\n</ng-select>\n","import {Component, Inject} from \"@angular/core\";\nimport {BaseUpsertComponentV2} from \"../../../../../../../base/components/base-upsert-v2.component\";\nimport {defaultUserConfig, selfRoutes, UserConfig} from \"../../models/config.model\";\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {EventBusService} from \"../../../../../../../services/eventbus/event-bus.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {SubscriptionContainerService} from \"../../../../../../../base/services/subscription-container.service\";\nimport {NotifierService} from \"../../../../../../../services/notifier/notifier.service\";\nimport {BreadcrumbItem} from \"../../../../../components/breadcrumb/breadcrumb.model\";\nimport {EventKey} from \"../../../../../../../services/eventbus/event.key\";\nimport {HttpErrorResponse} from \"@angular/common/http\";\nimport {IImageSlice} from \"../../../../../../common/modules/cms/files/models/file.model\";\nimport {BaseConfig} from \"../../../../../../../base/models/baseConfig\";\nimport {MAT_DIALOG_DATA} from \"@angular/material/dialog\";\nimport {IUserBrief} from \"../../models/user.model\";\nimport {UserService} from \"../../services/user.service\";\n\n@Component({\n  selector: 'app-user-upsert',\n  templateUrl: './user-upsert.component.html',\n  styleUrls: ['./user-upsert.component.scss']\n})\nexport class UserUpsertComponent extends BaseUpsertComponentV2<IUserBrief> {\n\n  config: UserConfig = defaultUserConfig\n\n  userForm = new FormGroup({\n    title: new FormControl('', [Validators.required, Validators.minLength(3)]),\n    description: new FormControl('', [Validators.required, Validators.minLength(20)]),\n    image: new FormControl<string | null>(null)\n  })\n\n  constructor(eventBus: EventBusService,\n              router: Router,\n              subContainer: SubscriptionContainerService,\n              route: ActivatedRoute,\n              private userService: UserService,\n              private notifier: NotifierService,\n              @Inject(MAT_DIALOG_DATA) dialogData: any) {\n    super(eventBus, router, subContainer, route, dialogData)\n\n    if (dialogData.title!=null){\n      this.userForm.controls.title.setValue(dialogData.title)\n    }\n\n  }\n\n  protected override componentName(): string {\n    return \"UserUpsertComponent\"\n  }\n\n  protected override getBreadcrumbItems(): BreadcrumbItem[] {\n    return [\n      {\n         text: this.translations[\"Dashboard\"],\n        link: null,\n        active: false\n      },\n      {\n        text: \"Users\",\n        link: \"/admin/users\",\n        active: false\n      },\n      {\n        text: \"Upsert\",\n        link: null,\n        active: true\n      }\n    ]\n  }\n\n  override initialize(exId: number): void {\n    this.loading = true\n    let key = this.componentKey(EventKey.USERS.GET(exId))\n    this.userService.fetchSingle(key, exId)\n    this.subscribe(key, null, (value, meta) => {\n      this.loading = false;\n      this.populateForm(meta.data)\n    })\n    this.subscribe(this.getErrorKey(key), null, (value, meta) => {\n      let error: HttpErrorResponse = meta.data\n      console.log(error)\n      this.loading = false;\n    })\n  }\n\n  onSubmit() {\n    if (!this.userForm.valid) {\n      return\n    }\n    this.upsert(this.exId)\n  }\n\n  onImgUploaded(images: IImageSlice[]) {\n    if (images.length > 0) {\n      /*\n      Think about the thumbnail, this will only upload the image, not thumbnail\n       */\n      this.userForm.controls.image.setValue(images[0].image_url)\n    }\n  }\n\n  getExImages(): IImageSlice[] {\n    let image = this.userForm.controls.image.value\n    if (image == null) {\n      return []\n    }\n    return [{image_url: image, thumb_url: image}]\n  }\n\n  getConfig(): BaseConfig {\n    return this.config;\n  }\n\n  getListPageRoute(): string {\n    return selfRoutes.list;\n  }\n\n  upsert(exId: number | null) {\n    this.loading = true\n    let key = this.componentKey(EventKey.USERS.UPSERT(exId))\n    // @ts-ignore\n    this.userService.upsert(key, this.userForm.value, exId)\n    this.subscribe(key, null, (value, meta) => {\n      this.loading = false;\n      let message = \"User has been \" + (exId ? \"updated\" : \"created\")\n      this.notifier.success(\"Success\", message)\n      this.userForm.reset();\n\n      if (this.config.upsertOnDialog) {\n        this.onCompleted.emit(meta.data)\n      } else {\n        this.navigateToListPage( )\n      }\n    })\n    this.subscribe(this.getErrorKey(key), null, (value, meta) => {\n      let error: HttpErrorResponse = meta.data\n      this.loading = false;\n      this.notifier.warning('Failed!', error.error.message)\n    })\n  }\n\n  private populateForm(n: IUserBrief) {\n    // this.userForm.controls.title.setValue(n.title)\n    // this.userForm.controls.description.setValue(n.description)\n    // this.userForm.controls.image.setValue(n.image == null ? null : n.image)\n  }\n\n}\n","<util-progress *ngIf=\"loading\" [bar]=\"true\"></util-progress>\n<div class=\"row\" [@loaded]=\"!loading\">\n  <div class=\"col-xl-12\">\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <h4 class=\"card-title mb-4\">Create/Update User</h4>\n        <form [formGroup]=\"userForm\">\n          <div class=\"mb-3\">\n            <label for=\"title-input\" class=\"form-label\">Title<em class=\"error\">*</em></label>\n            <input type=\"text\" class=\"form-control\" id=\"title-input\" placeholder=\"Enter Title\"\n                   name=\"title\" formControlName=\"title\">\n            <em class=\"text-danger\">\n              {{ errMsg(userForm, 'title', 'minLength', 'Title should be at least 3 characters!') }}\n            </em>\n          </div>\n\n          <div class=\"mb-3\">\n            <label for=\"description\" class=\"form-label\">Description</label>\n            <textarea class=\"form-control\" id=\"description\" placeholder=\"Enter Description\" rows=\"5\"\n                      name=\"description\" formControlName=\"description\"></textarea>\n            <em class=\"text-danger\">\n              {{ errMsg(userForm, 'description', 'minLength', 'Description should be at least 20 characters!') }}\n            </em>\n          </div>\n\n          <app-file-picker\n            title=\"{{translations['Image']}}\"\n            [multiSelect]=\"false\"\n            [existingImages]=\"getExImages()\"\n            [required]=\"false\"\n            (onUploaded)=\"onImgUploaded($event)\"\n          ></app-file-picker>\n\n          <div class=\"d-flex flex-wrap gap-3 float-end\">\n            <button class=\"btn btn-secondary waves-effect\" (click)=\"onCancel()\">\n              Cancel\n            </button>\n            <button type=\"submit\" class=\"btn btn-primary waves-effect waves-light\"\n                    [ngClass]=\"userForm.valid?'':'disabled'\" (click)=\"onSubmit()\">\n              Submit\n            </button>\n          </div>\n        </form>\n      </div>\n      <!-- end card body -->\n    </div>\n    <!-- end card -->\n  </div>\n</div>\n\n","import {BaseConfig} from \"../../../../../../base/models/baseConfig\";\nimport {Layout} from \"../../../../components/breadcrumb/breadcrumb.model\";\nimport {UserEndpoints} from \"../../user.endpoint\";\n\nexport interface UserConfig extends BaseConfig {\n}\n\nexport let defaultUserConfig: UserConfig = {\n  defaultLayout: Layout.GRID,\n  upsertOnDialog: true,\n  showUserFilter: false,\n  showDeleteButton: true,\n  searchEndpoint: UserEndpoints.USERS.USER_ENDPOINT,\n  delEndpoint: UserEndpoints.USERS.USER_ENDPOINT\n}\n\nexport let selfEndpoints = {\n  endpoint: UserEndpoints.USERS.USER_ENDPOINT,\n  adminEndpoint: UserEndpoints.USERS.USER_ENDPOINT_ADMIN,\n}\n\nexport let selfRoutes = {\n  list: \"/admin/users\",\n  create: \"/admin/users/create\",\n  update(id: number | null) {\n    return id == null ? this.create : \"/admin/users/\" + id + '/update'\n  }\n}\n\n","import {Injectable} from \"@angular/core\";\nimport {BaseService} from \"../../../../../../base/services/base.service\";\nimport {AuthService} from \"../../../../../common/modules/auth/services/auth.service\";\nimport {NotifierService} from \"../../../../../../services/notifier/notifier.service\";\nimport {HttpClient, HttpErrorResponse} from \"@angular/common/http\";\nimport {EventBusService} from \"../../../../../../services/eventbus/event-bus.service\";\nimport {IParams} from \"../../../../../../base/endpoints/iparams\";\nimport {AdminEndpoint} from \"../../../../admin.endpoint\";\nimport {IPage} from \"../../../../../../base/models/IPage\";\nimport {IAuth} from \"../../../../../common/modules/auth/models/auth.model\";\nimport {IUserBrief, IUserReq} from \"../models/user.model\";\nimport {UserEndpoints} from \"../../user.endpoint\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService extends BaseService {\n\n  constructor(\n    authService: AuthService,\n    notifier: NotifierService,\n    private http: HttpClient,\n    private eventBusService: EventBusService\n  ) {\n    super(authService, notifier)\n  }\n\n  search(key: string, endpoint: string, params: IParams) {\n    let url = UserEndpoints.USERS.SEARCH(endpoint, params)\n    this.http.get<IPage<IUserBrief>>(url)\n      .subscribe((user: IPage<IUserBrief>) => {\n        this.eventBusService.publish(key, user)\n      }, error => {\n        this.handleError(error, (auth: IAuth) => {\n          this.search(key, endpoint, params)\n        }, (err: HttpErrorResponse) => {\n          this.eventBusService.publish(this.getErrorKey(key), err)\n        })\n      })\n  }\n\n  fetchSingle(key: string, id: number) {\n    this.http.get<IUserBrief>(UserEndpoints.USERS.GET(id))\n      .subscribe((user: IUserBrief) => {\n        this.eventBusService.publish(key, user)\n      }, (error: HttpErrorResponse) => {\n        this.handleError(error, (auth: IAuth) => {\n          this.fetchSingle(key, id)\n        }, (err: HttpErrorResponse) => {\n          this.eventBusService.publish(this.getErrorKey(key), err)\n        })\n      })\n  }\n\n  upsert(key: string, userReq: IUserReq, exId: number | null) {\n    let endpoint = exId == null ? UserEndpoints.USERS.CREATE() : UserEndpoints.USERS.UPDATE(exId)\n    let observable = exId == null ? this.http.post<number>(endpoint, userReq)\n      : this.http.patch(endpoint, userReq)\n    observable.subscribe(res => {\n      this.eventBusService.publish(key, res)\n    }, (err: HttpErrorResponse) => {\n      this.handleError(err, (auth: IAuth) => {\n        this.upsert(key, userReq, exId)\n      }, (err: HttpErrorResponse) => {\n        this.eventBusService.publish(this.getErrorKey(key), err)\n      })\n    })\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.scss']\n})\nexport class UserComponent {\n\n}\n","<app-user-list></app-user-list>\n"],"names":["defaultPage","moment","TimeUtility","EventKey","BaseComponent","i0","ɵɵelement","ɵɵproperty","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","u_r2","user_id","username","user_agent","ip","request_method","url","total_visitors","ɵɵpipeBind1","created_at","updated_at","ActivityLogComponent","constructor","notifier","eventBus","router","subContainer","activatedRoute","activityLogService","size","page","activityLogs","created_from","Date","created_to","componentName","ngOnInit","queryParams","subscribe","params","from","to","toDate","getDayStart","getDayEnd","searchActivityLogs","from_date","to_date","loading","key","componentKey","REQUEST_CREDENTIALS","ADMIN_SEARCH_LOCKOUTS","search","value","meta","data","getErrorKey","log","_","ɵɵdirectiveInject","i1","NotifierService","i2","EventBusService","i3","Router","i4","SubscriptionContainerService","ActivatedRoute","i5","ActivityLogService","_2","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","consts","template","ActivityLogComponent_Template","rf","ctx","ɵɵtemplate","ActivityLogComponent_util_progress_1_Template","ActivityLogComponent_tr_42_Template","content","credentials_r2","body","user_agent_header","forwarded_for_header","authorization_header","cookie_header","referer_header","x_frame_options_header","content_type_header","origin_header","x_http_method_override_header","content_security_policy_header","accept_charset_header","accept_datetime_header","accept_encoding_header","accept_header","accept_language_header","access_control_allow_credentials_header","access_control_allow_headers_header","access_control_allow_methods_header","access_control_allow_origin_header","access_control_expose_headers_header","access_control_max_age_header","access_control_request_headers_header","access_control_request_method_header","authorization_info_header","cache_control_header","connection_header","content_encoding_header","content_length_header","dnt_header","forward_header","host_header","if_modified_since_header","if_none_match_header","if_range_header","if_unmodified_since_header","max_forwards_header","pragma_header","proxy_authorization_header","range_header","te_header","upgrade_header","via_header","warning_header","x_forwarded_for_header","x_forwarded_host_header","x_forwarded_proto_header","x_requested_with_header","RequestCredentialsComponent","reqCredService","searchRequestCredentials","onFilterClick","requestCredentials","onPageChanged","event","pageIndex","filterForToday","clearFilter","ReqCredService","RequestCredentialsComponent_Template","RequestCredentialsComponent_util_progress_1_Template","ɵɵlistener","RequestCredentialsComponent_Template_button_click_11_listener","RequestCredentialsComponent_Template_input_ngModelChange_17_listener","$event","RequestCredentialsComponent_Template_input_ngModelChange_22_listener","RequestCredentialsComponent_Template_button_click_24_listener","RequestCredentialsComponent_Template_button_click_27_listener","RequestCredentialsComponent_tr_134_Template","RequestCredentialsComponent_Template_mat_paginator_page_137_listener","ɵɵpureFunction0","_c0","_c1","totalElements","UsersComponent","UsersComponent_Template","BaseService","WebAppEndpoint","authService","http","get","ACTIVITY_LOGS","ADMIN_SEARCH","res","publish","error","handleError","auth","err","ɵɵinject","AuthService","HttpClient","factory","ɵfac","providedIn","BaseEndpoint","environment","UserEndpoints","USERS","USER_ENDPOINT","base_url","USER_ENDPOINT_ADMIN","SEARCH","endpoint","concat","toParamString","CREATE","GET","id","UPDATE","_3","CommonModule","UtilityModule","BsDatepickerModule","FormsModule","ReactiveFormsModule","MatPaginatorModule","UserRoute","UserComponent","UserListComponent","UserUpsertComponent","UserSelectComponent","CmsModule","AdminModule","NgSelectModule","UserModule","declarations","imports","exports","RouterModule","AcValidationTokenComponent","routes","path","component","forChild","BaseListComponentV2","defaultUserConfig","selfEndpoints","selfRoutes","defaultFilterData","parseFilterData","toParams","UserListComponent_div_8_h4_7_Template","UserListComponent_div_8_h4_8_Template","ctx_r1","item_r10","created_by","ɵɵpropertyInterpolate","avatar","ɵɵsanitizeUrl","ɵɵtextInterpolate1","name","substring","toUpperCase","UserListComponent_div_9_div_1_tr_33_td_30_Template_app_delete_deleteItemEvent_1_listener","ɵɵrestoreView","_r19","ctx_r18","ɵɵnextContext","ɵɵresetView","onDeleted","ctx_r14","config","delEndpoint","UserListComponent_div_9_div_1_tr_33_td_3_Template","UserListComponent_div_9_div_1_tr_33_img_8_Template","UserListComponent_div_9_div_1_tr_33_span_9_Template","UserListComponent_div_9_div_1_tr_33_Template_a_click_11_listener","restoredCtx","_r22","$implicit","ctx_r21","onUpsertClick","UserListComponent_div_9_div_1_tr_33_Template_a_click_28_listener","ctx_r23","UserListComponent_div_9_div_1_tr_33_td_30_Template","ctx_r9","showUserFilter","gender","phone","email","showDeleteButton","UserListComponent_div_9_div_1_th_12_Template","UserListComponent_div_9_div_1_th_31_Template","UserListComponent_div_9_div_1_tr_33_Template","ctx_r5","layout","Layout","COLUMN","users","item_r25","UserListComponent_div_9_div_2_div_1_div_34_Template_app_delete_deleteItemEvent_1_listener","_r41","ctx_r40","ctx_r33","UserListComponent_div_9_div_2_div_1_div_3_Template","UserListComponent_div_9_div_2_div_1_div_4_Template","UserListComponent_div_9_div_2_div_1_Template_a_click_6_listener","_r44","ctx_r43","UserListComponent_div_9_div_2_div_1_h6_8_Template","UserListComponent_div_9_div_2_div_1_small_20_Template","UserListComponent_div_9_div_2_div_1_small_21_Template","UserListComponent_div_9_div_2_div_1_span_23_Template","UserListComponent_div_9_div_2_div_1_span_24_Template","UserListComponent_div_9_div_2_div_1_Template_a_click_32_listener","ctx_r45","UserListComponent_div_9_div_2_div_1_div_34_Template","ctx_r24","UserListComponent_div_9_div_2_div_1_Template","ctx_r6","GRID","UserListComponent_div_9_div_1_Template","UserListComponent_div_9_div_2_Template","ctx_r2","dialog","userService","filterData","isAdmin","searchEndpoint","adminEndpoint","initialize","fetchUsers","q","query","fromDate","getBreadcrumbItems","text","translations","link","active","message","deleted","success","getConfig","getRoutes","create","update","getUpsertComponent","DialogService","i6","UserService","i7","UserListComponent_Template","UserListComponent_Template_app_breadcrumb_layoutSelected_2_listener","onLayoutSelected","UserListComponent_Template_app_basic_filter_addButtonClick_6_listener","UserListComponent_util_progress_7_Template","UserListComponent_div_8_Template","UserListComponent_div_9_Template","breadcrumbItems","empty","EventEmitter","TextUtility","popupService","enableAdd","items","selectedItem","selected","searchForEvent","removeSpecialCharacters","target","length","onSelected","emit","find","c","popup","open","title","componentInstance","onCompleted","user","inputs","outputs","UserSelectComponent_Template","UserSelectComponent_util_progress_2_Template","UserSelectComponent_Template_ng_select_keyup_3_listener","UserSelectComponent_Template_ng_select_ngModelChange_3_listener","UserSelectComponent_Template_ng_select_change_3_listener","BaseUpsertComponentV2","FormControl","FormGroup","Validators","MAT_DIALOG_DATA","route","dialogData","userForm","required","minLength","description","image","controls","setValue","exId","fetchSingle","populateForm","console","onSubmit","valid","upsert","onImgUploaded","images","image_url","getExImages","thumb_url","getListPageRoute","list","UPSERT","reset","upsertOnDialog","navigateToListPage","warning","n","UserUpsertComponent_Template","UserUpsertComponent_util_progress_0_Template","UserUpsertComponent_Template_app_file_picker_onUploaded_22_listener","UserUpsertComponent_Template_button_click_24_listener","onCancel","UserUpsertComponent_Template_button_click_26_listener","errMsg","defaultLayout","eventBusService","userReq","observable","post","patch","UserComponent_Template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}